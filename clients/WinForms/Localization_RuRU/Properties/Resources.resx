<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Program_0" xml:space="preserve">
    <value>Самодиагностика</value>
  </data>
  <data name="Program_0_Comment" xml:space="preserve">
    <value>Поочередный тест всех компонентов. Запускать без белья после установки или переподключения</value>
  </data>
  <data name="Program_1" xml:space="preserve">
    <value>Хлопок 90° с предв.</value>
  </data>
  <data name="Program_1_Comment" xml:space="preserve">
    <value>Очень сильно загрязненное белое белье (простыни, скатерти, и т.д.)</value>
  </data>
  <data name="Program_2" xml:space="preserve">
    <value>Хлопок 90°</value>
  </data>
  <data name="Program_2_Comment" xml:space="preserve">
    <value>Очень сильно загрязненное белое белье (простыни, скатерти, и т.д.)</value>
  </data>
  <data name="Program_3" xml:space="preserve">
    <value>Хлопок 60°</value>
  </data>
  <data name="Program_3_Comment" xml:space="preserve">
    <value>Сильно загрязненное белое и прочно окрашенное цветное белье</value>
  </data>
  <data name="Program_4" xml:space="preserve">
    <value>Хлопок 40°</value>
  </data>
  <data name="Program_4_Comment" xml:space="preserve">
    <value>Слабо загрязненное белое и линяющее цветное белье (рубашки, майки, и т.д.)</value>
  </data>
  <data name="Program_5" xml:space="preserve">
    <value>Хлопок 30°</value>
  </data>
  <data name="Program_5_Comment" xml:space="preserve">
    <value>Слабо загрязненное линяющее цветное белье</value>
  </data>
  <data name="Program_6" xml:space="preserve">
    <value>Синтетика 60°</value>
  </data>
  <data name="Program_6_Comment" xml:space="preserve">
    <value>Сильно загрязненная, прочно окрашенная цветная (детская одежда и пр.)</value>
  </data>
  <data name="Program_7" xml:space="preserve">
    <value>Синтетика 50°</value>
  </data>
  <data name="Program_7_Comment" xml:space="preserve">
    <value>Сильно загрязненная, прочно окрашенная цветная (детская одежда и пр.)</value>
  </data>
  <data name="Program_8" xml:space="preserve">
    <value>Синтетика 40°</value>
  </data>
  <data name="Program_8_Comment" xml:space="preserve">
    <value>Слабо загрязненная, деликатная цветная (любая одежда)</value>
  </data>
  <data name="Program_9" xml:space="preserve">
    <value>Синтетика 30°</value>
  </data>
  <data name="Program_9_Comment" xml:space="preserve">
    <value>Слабо загрязненная, деликатная цветная (любая одежда)</value>
  </data>
  <data name="Program_10" xml:space="preserve">
    <value>Шерсть</value>
  </data>
  <data name="Program_10_Comment" xml:space="preserve">
    <value>Шерсть</value>
  </data>
  <data name="Program_11" xml:space="preserve">
    <value>Шелк</value>
  </data>
  <data name="Program_11_Comment" xml:space="preserve">
    <value>Особо деликатные ткани и одежда (завеси, шелк, вискоза и пр.)</value>
  </data>
  <data name="Program_12" xml:space="preserve">
    <value>Полоскание</value>
  </data>
  <data name="Program_12_Comment" xml:space="preserve">
    <value>Полоскание</value>
  </data>
  <data name="Program_13" xml:space="preserve">
    <value>Деликатное полоскание</value>
  </data>
  <data name="Program_13_Comment" xml:space="preserve">
    <value>Деликатное полоскание</value>
  </data>
  <data name="Program_14" xml:space="preserve">
    <value>Отжим</value>
  </data>
  <data name="Program_14_Comment" xml:space="preserve">
    <value>Отжим</value>
  </data>
  <data name="Program_15" xml:space="preserve">
    <value>Деликатный отжим</value>
  </data>
  <data name="Program_15_Comment" xml:space="preserve">
    <value>Деликатный отжим</value>
  </data>
  <data name="Program_16" xml:space="preserve">
    <value>Слив</value>
  </data>
  <data name="Program_16_Comment" xml:space="preserve">
    <value>Слив</value>
  </data>
  <data name="Program_17" xml:space="preserve">
    <value>Слив магистрали</value>
  </data>
  <data name="Program_17_Comment" xml:space="preserve">
    <value>Слив с открытыми клапанами</value>
  </data>
  <data name="Program_18" xml:space="preserve">
    <value>Водонагреватель</value>
  </data>
  <data name="Program_18_Comment" xml:space="preserve">
    <value>Водонагреватель</value>
  </data>
  <data name="Program_19" xml:space="preserve">
    <value>Притирка щеток</value>
  </data>
  <data name="Program_19_Comment" xml:space="preserve">
    <value>Притирка щеток</value>
  </data>
  <data name="Stage_0" xml:space="preserve">
    <value>стоп</value>
  </data>
  <data name="Stage_1" xml:space="preserve">
    <value>блокировка люка</value>
  </data>
  <data name="Stage_2" xml:space="preserve">
    <value>разблокировка люка</value>
  </data>
  <data name="Stage_3" xml:space="preserve">
    <value>полоскание</value>
  </data>
  <data name="Stage_4" xml:space="preserve">
    <value>отжим</value>
  </data>
  <data name="Stage_5" xml:space="preserve">
    <value>предв.стирка</value>
  </data>
  <data name="Stage_6" xml:space="preserve">
    <value>стирка</value>
  </data>
  <data name="Stage_7" xml:space="preserve">
    <value>набор воды</value>
  </data>
  <data name="Stage_8" xml:space="preserve">
    <value>слив</value>
  </data>
  <data name="Stage_9" xml:space="preserve">
    <value>самотестирование</value>
  </data>
  <data name="Status_NotFound" xml:space="preserve">
    <value>Не найдено</value>
  </data>
  <data name="Status_Connected" xml:space="preserve">
    <value>Подключено через {0}</value>
  </data>
  <data name="Status_ConnectionBreak" xml:space="preserve">
    <value>Нет связи</value>
  </data>
  <data name="Status_Washing" xml:space="preserve">
    <value>{0}: {1}</value>
  </data>
  <data name="Status_ConnectFailed" xml:space="preserve">
    <value>Не удалось подключиться</value>
  </data>
  <data name="Status_Reconnecting" xml:space="preserve">
    <value>Переподключение</value>
  </data>
  <data name="Label_Duration" xml:space="preserve">
    <value>Длительность стирки, мин.</value>
  </data>
  <data name="Label_RinsingCycles" xml:space="preserve">
    <value>Количество полосканий</value>
  </data>
  <data name="Label_SpinningSpeed" xml:space="preserve">
    <value>Скорость отжима, об./мин.</value>
  </data>
  <data name="Label_Temperature" xml:space="preserve">
    <value>Температура, °C</value>
  </data>
  <data name="Label_WashingSpeed" xml:space="preserve">
    <value>Скорость стирки, об./мин.</value>
  </data>
  <data name="Label_WaterLevel" xml:space="preserve">
    <value>Уровень воды, %</value>
  </data>
</root>